/**
  *     GaPlots.java : Class which dumps plot info into a comma seperated file.
  *     Also dumps out the optimal tour with co-ords for graphing
  *
  */



import java.io.*;
import java.lang.*;
import java.util.*;


public class GaPlots {


       private static String outputFile = new String();
       private static File fd;
       private static FileWriter output;


       public GaPlots( String fileName ){

              outputFile = fileName;

              try{
              fd = new File( outputFile );

              output = new FileWriter( fd );

              }
              catch (IOException ioe)
              {
              System.out.println(ioe.toString());
              }
              catch (SecurityException se)
              {
              System.out.println(se.toString());
              }

       }


       public void init(){

              try{

              output.write("Generated by GaPlots & Evolver v" + Evolver.VER + "\n");
              output.write("Running on " + System.getProperty("os.name") + ", version " + System.getProperty("os.version") + "\nProcessor type : " + System.getProperty("os.arch") + "\n\n\n");
              output.write("Generation,best_fitness,worst_fitness,average_fitness\n");

              }
              catch (IOException ioe)
              {
              System.out.println(ioe.toString());
              }
              catch (SecurityException se)
              {
              System.out.println(se.toString());
              }
       }
       /**
         *    Saves best_fit for each generation, and best_fitness_so_far
         *
         */
       public void save( double best_fit, double best_so_far ){

              try{

              output.write( best_fit + "," + best_so_far + "\n");

              }
              catch (IOException ioe)
              {
              System.out.println(ioe.toString());
              }
              catch (SecurityException se)
              {
              System.out.println(se.toString());
              }
       }

       /**
         *    Saves generation number and best_fit for each generation
         *
         */
       public void save( int generation, double best_fit ){

              try{

              output.write( generation + "," + best_fit + "\n");

              }
              catch (IOException ioe)
              {
              System.out.println(ioe.toString());
              }
              catch (SecurityException se)
              {
              System.out.println(se.toString());
              }
       }

       /**
         *    Saves generation number, best_fit, worst_fit, average_fit
         *
         */

       public void save( int generation, double best_fit, double worst_fit, double average_fit ){

              try{

              output.write( generation + "," + best_fit + "," + worst_fit + "," + average_fit + "\n");

              }
              catch (IOException ioe)
              {
              System.out.println(ioe.toString());
              }
              catch (SecurityException se)
              {
              System.out.println(se.toString());
              }
       }

       public void saveBestInit(){

              try{

              output.write("\n\nBest Ever Tour\n");
              output.write("\ncity,x_coord,y_coord\n");

              }
              catch (IOException ioe)
              {
              System.out.println(ioe.toString());
              }
              catch (SecurityException se)
              {
              System.out.println(se.toString());
              }


       }


       public void saveBest( int city, double x, double y ){

              try{

              output.write( city + "," + x + "," + y + "\n");

              }
              catch (IOException ioe)
              {
              System.out.println(ioe.toString());
              }
              catch (SecurityException se)
              {
              System.out.println(se.toString());
              }


       }



       public void finish(){

              try{

              output.flush();
              output.close();

              }
              catch (IOException ioe)
              {
              System.out.println(ioe.toString());
              }
              catch (SecurityException se)
              {
              System.out.println(se.toString());
              }

       }

}
